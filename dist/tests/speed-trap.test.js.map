{"version":3,"file":"speed-trap.test.js","sourceRoot":"/","sources":["tests/speed-trap.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  /*global describe, beforeEach, it*/\n  'use strict';\n\n  import { assert } from 'chai';\n  import SpeedTrap from '../src/index';\n\n  describe('Speed Trap', () => {\n    let speedTrap: SpeedTrap;\n\n    beforeEach(() => {\n      speedTrap = new SpeedTrap({});\n    });\n\n    describe('getLoad', () => {\n      it('gets data available on window.onload', () => {\n        const data = speedTrap.getLoad();\n        assert.isObject(data.navigationTiming);\n        // when run in a non-browser environment, the value is ''\n        assert.isTrue('referrer' in data);\n        // when run in a non-browser environment, width/height are 0.\n        assert.equal(data.screen.width, 0);\n        assert.equal(data.screen.height, 0);\n        console.log('data', data);\n        assert.isString(data.uuid);\n        // when run in a non-browser environment, the value is undefined.\n        assert.isTrue('puuid' in data);\n        assert.isBoolean(data.returning);\n      });\n    });\n\n    describe('getUnload', () => {\n      it('gets data available after app has been running', () => {\n        const data = speedTrap.getUnload();\n\n        assert.isObject(data.timers);\n        assert.isArray(data.events);\n        assert.isNumber(data.duration);\n      });\n    });\n\n    describe('navigationTiming', () => {\n      it('is captured', () => {\n        assert.ok('loadEventEnd' in speedTrap.navigationTiming.get());\n      });\n    });\n\n    describe('timers', () => {\n      it('can be captured', function (done) {\n        speedTrap.timers.start('named_timer');\n        setTimeout(() => {\n          speedTrap.timers.stop('named_timer');\n          const timers = speedTrap.timers.get('named_timer');\n          assert.isArray(timers);\n          assert.isAtLeast(timers[0].elapsed, 1);\n          done();\n        }, 1);\n      });\n\n      it('can be cleared', () => {\n        speedTrap.timers.start('named_timer');\n        speedTrap.timers.stop('named_timer');\n\n        speedTrap.timers.clear();\n\n        const timers = speedTrap.timers.get('named_timer');\n        assert.isUndefined(timers);\n      });\n    });\n\n    describe('events', () => {\n      it('can be captured', () => {\n        speedTrap.events.capture('event');\n        const events = speedTrap.events.get();\n        assert.isArray(events);\n        assert.equal(events[0].type, 'event');\n        assert.isNumber(events[0].offset);\n      });\n\n      it('can be cleared', () => {\n        speedTrap.events.capture('event');\n\n        speedTrap.events.clear();\n\n        const events = speedTrap.events.get();\n        assert.equal(events.length, 0);\n      });\n    });\n  });\n\n"]}