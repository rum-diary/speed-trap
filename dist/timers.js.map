{"version":3,"file":"timers.js","sourceRoot":"/","sources":["timers.ts"],"names":[],"mappings":"AAAA;;8DAE8D;AAE9D,YAAY,CAAC;;AAEb,MAAqB,MAAM;IAKzB,YAAY,OAA6B;QACvC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,IAAY;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,wBAAwB,CAAC,CAAC;QAEzE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,IAAY;QACf,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC;QAEtE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACrD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;YACxB,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,QAAQ;YAC5B,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ;YAC1B,OAAO,EAAE,IAAI,GAAG,KAAK;SACtB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,GAAG,CAAC,IAAa;QACf,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC;QACjC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;CACF;AA7CD,yBA6CC","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nexport default class Timers {\n  completed: any;\n  running: any;\n  baseTime: number;\n\n  constructor(options: { baseTime: number }) {\n    this.completed = {};\n    this.running = {};\n    this.baseTime = options.baseTime;\n  }\n\n  start(name: string) {\n    var start = Date.now();\n    if (this.running[name]) throw new Error(name + \" timer already started\");\n\n    this.running[name] = start;\n  }\n\n  stop(name: string) {\n    var stop = Date.now();\n\n    if (!this.running[name]) throw new Error(name + \" timer not started\");\n\n    if (!this.completed[name]) this.completed[name] = [];\n    var start = this.running[name];\n\n    this.completed[name].push({\n      start: start - this.baseTime,\n      stop: stop - this.baseTime,\n      elapsed: stop - start\n    });\n\n    this.running[name] = null;\n    delete this.running[name];\n  }\n\n  get(name?: string) {\n    if (!name) return this.completed;\n    return this.completed[name];\n  }\n\n  clear() {\n    this.completed = {};\n    this.running = {};\n  }\n}\n"]}